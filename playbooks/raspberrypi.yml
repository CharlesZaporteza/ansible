- name: Configure K3s master
  hosts: master
  roles:
    - common
  tasks:
    - name: Download k3s install script
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'

    - name: Install K3s master
      shell: |
        export INSTALL_K3S_VERSION='{{ k3s_version }}'
        export K3S_TOKEN='{{ k3s_token }}'
        /tmp/k3s-install.sh server
      args:
        creates: "{{ k3s_server_location }}"

    - name: Wait for node-token
      wait_for:
        path: /var/lib/rancher/k3s/server/node-token

    - name: Get node-token from master
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token

    - name: Store node-token for workers
      set_fact:
        k3s_node_token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

    - name: Create .kube directory
      file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy k3s.yaml to .kube/config
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

- name: Configure K3s workers
  hosts: worker
  roles:
    - common
  vars:
    master_ip: "{{ hostvars[groups['master'][0]]['ansible_host'] }}"
  tasks:
    - name: Get node token from master
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token
      delegate_to: k3s-master
      become: yes

    - name: Download k3s install script
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'

    - name: Install K3s agent
      shell: |
        export INSTALL_K3S_VERSION='{{ k3s_version }}'
        export K3S_URL=https://{{ master_ip }}:6443
        export K3S_TOKEN={{ node_token.content | b64decode | regex_replace('\n', '') }}
        /tmp/k3s-install.sh agent
      args:
        creates: /usr/local/bin/k3s-agent

    # - name: Label node as worker
    #   shell: |
    #     kubectl label node {{ ansible_hostname }} node-role.kubernetes.io/worker=worker
    #   delegate_to: "{{ groups['master'][0] }}"
    #   become: yes
    #   ignore_errors: yes


# # README.md
# # K3s Cluster Setup with Ansible

# This Ansible project sets up a K3s cluster on Raspberry Pi devices.

# ## Prerequisites
# - Ansible installed on control machine
# - Ubuntu Server installed on Raspberry Pis
# - SSH access configured to all nodes
# - Static IP addresses configured

# ## Usage
# 1. Update the k3s_token in inventory/onprem/group_vars/all.yml
# 2. Run the playbook:
#    ```bash
#    ansible-playbook playbooks/site.yml --ask-become-pass
#    ```

# ## Configuration
# - K3s version: v1.28.3+k3s2 (can be changed in group_vars/all.yml)
# - Default token can be changed in group_vars/all.yml

# ## Verification
# On master node:
# ```bash
# kubectl get nodes
# kubectl get pods -A
# ```

# # The rest of the files remain the same as in the previous structure:
# # - ansible.cfg
# # - inventory/onprem/hosts.yml
# # - playbooks/site.yml
# # - roles/common/{defaults,vars}/main.yml